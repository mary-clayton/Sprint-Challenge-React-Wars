{"ast":null,"code":"import _slicedToArray from \"/Users/maryclayton/Documents/LambdaSchool/Sprint-Challenge-React-Wars/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/maryclayton/Documents/LambdaSchool/Sprint-Challenge-React-Wars/src/App.js\";\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport StarCard from \"./components/StarCard\";\nimport { Row, Spinner } from \"reactstrap\";\nimport \"./App.css\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\nconst App = () => {\n  // Try to think through what state you'll need for this app before starting. Then build out\n  const _useState = useState(),\n        _useState2 = _slicedToArray(_useState, 2),\n        star = _useState2[0],\n        setStar = _useState2[1]; // Fetch characters from the star wars api in an effect hook. Remember, anytime you have a\n  // side effect in a component, you want to think about which state and/or props it should\n  // sync up with, if any.\n\n\n  useEffect(() => {\n    axios.get(\"https://swapi.co/api/people/\").then(response => {\n      setStar(response.data.results);\n    }).catch(error => \"Error: \".concat(error));\n  }, []);\n\n  if (star !== undefined) {\n    return React.createElement(\"div\", {\n      className: \"App\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      className: \"Header\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      role: \"img\",\n      \"aria-label\": \"alien\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30\n      },\n      __self: this\n    }, \"\\uD83D\\uDC7D\"), \"React Wars\", React.createElement(\"span\", {\n      role: \"img\",\n      \"aria-label\": \"alien\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30\n      },\n      __self: this\n    }, \"\\uD83D\\uDC7D\"), \" \"), React.createElement(Row, {\n      className: \"rows\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31\n      },\n      __self: this\n    }, star.map((person, count) => {\n      return React.createElement(StarCard, {\n        key: count,\n        person: person,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34\n        },\n        __self: this\n      });\n    })));\n  } else {\n    return React.createElement(\"div\", {\n      className: \"App\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      className: \"Header\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }, \"React Wars\"), React.createElement(\"div\", {\n      className: \"loader\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }, \"Preparing Space Ship Data \", React.createElement(\"span\", {\n      role: \"img\",\n      \"aria-label\": \"spaceship\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }, \"\\uD83D\\uDE80\")), React.createElement(Spinner, {\n      size: \"sm\",\n      color: \"light\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    })));\n  }\n};\n\nexport default App;","map":{"version":3,"sources":["/Users/maryclayton/Documents/LambdaSchool/Sprint-Challenge-React-Wars/src/App.js"],"names":["React","useState","useEffect","axios","StarCard","Row","Spinner","App","star","setStar","get","then","response","data","results","catch","error","undefined","map","person","count"],"mappings":";;AACA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,uBAArB;AACA,SAASC,GAAT,EAAcC,OAAd,QAA6B,YAA7B;AACA,OAAO,WAAP;AACA,OAAO,sCAAP;;AAEA,MAAMC,GAAG,GAAG,MAAM;AAChB;AADgB,oBAGQN,QAAQ,EAHhB;AAAA;AAAA,QAGTO,IAHS;AAAA,QAGHC,OAHG,kBAKhB;AACA;AACA;;;AAEAP,EAAAA,SAAS,CAAC,MAAM;AACdC,IAAAA,KAAK,CACFO,GADH,CACO,8BADP,EAEGC,IAFH,CAEQC,QAAQ,IAAI;AAChBH,MAAAA,OAAO,CAACG,QAAQ,CAACC,IAAT,CAAcC,OAAf,CAAP;AACD,KAJH,EAKGC,KALH,CAKSC,KAAK,qBAAcA,KAAd,CALd;AAMD,GAPQ,EAON,EAPM,CAAT;;AASA,MAAIR,IAAI,KAAKS,SAAb,EAAwB;AACtB,WACE;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAI,MAAA,SAAS,EAAC,QAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAuB;AAAM,MAAA,IAAI,EAAC,KAAX;AAAiB,oBAAY,OAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAAvB,gBAA+E;AAAM,MAAA,IAAI,EAAC,KAAX;AAAiB,oBAAY,OAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAA/E,MADF,EAEE,oBAAC,GAAD;AAAK,MAAA,SAAS,EAAG,MAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGT,IAAI,CAACU,GAAL,CAAS,CAACC,MAAD,EAASC,KAAT,KAAmB;AAE3B,aAAO,oBAAC,QAAD;AAAU,QAAA,GAAG,EAAEA,KAAf;AAAsB,QAAA,MAAM,EAAED,MAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAP;AAED,KAJA,CADH,CAFF,CADF;AAYD,GAbD,MAaO;AACL,WACE;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAI,MAAA,SAAS,EAAC,QAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,EAEE;AAAK,MAAA,SAAS,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qCAA8B;AAAM,MAAA,IAAI,EAAC,KAAX;AAAiB,oBAAY,WAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAA9B,CADF,EAEE,oBAAC,OAAD;AAAS,MAAA,IAAI,EAAC,IAAd;AAAmB,MAAA,KAAK,EAAC,OAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,CAFF,CADF;AASD;AACF,CA1CD;;AA2CA,eAAeZ,GAAf","sourcesContent":["\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport StarCard from \"./components/StarCard\";\nimport { Row, Spinner } from \"reactstrap\";\nimport \"./App.css\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\nconst App = () => {\n  // Try to think through what state you'll need for this app before starting. Then build out\n  // the state properties here.\n  const [star, setStar] = useState();\n\n  // Fetch characters from the star wars api in an effect hook. Remember, anytime you have a\n  // side effect in a component, you want to think about which state and/or props it should\n  // sync up with, if any.\n\n  useEffect(() => {\n    axios\n      .get(\"https://swapi.co/api/people/\")\n      .then(response => {\n        setStar(response.data.results);\n      })\n      .catch(error => `Error: ${error}`);\n  }, []);\n\n  if (star !== undefined) {\n    return (\n      <div className=\"App\">\n        <h1 className=\"Header\"><span role=\"img\" aria-label= \"alien\">ðŸ‘½</span>React Wars<span role=\"img\" aria-label= \"alien\">ðŸ‘½</span> </h1>\n        <Row className = \"rows\">\n          {star.map((person, count) => {\n           \n            return <StarCard key={count} person={person} />;\n            \n          })}\n          </Row>\n      </div>\n    );\n  } else {\n    return (\n      <div className=\"App\">\n        <h1 className=\"Header\">React Wars</h1>\n        <div className=\"loader\">\n          <h2>Preparing Space Ship Data <span role=\"img\" aria-label= \"spaceship\">ðŸš€</span></h2>\n          <Spinner size=\"sm\" color=\"light\" />\n        </div>\n      </div>\n    );\n  }\n};\nexport default App;"]},"metadata":{},"sourceType":"module"}